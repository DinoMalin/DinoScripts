#!/bin/bash

TOP="-1"
if [[ "$1" =~ ^top([0-9]+)$ ]]; then
	TOP="${BASH_REMATCH[1]}"
	
elif [[ "$1" =~ ^top ]]; then
	echo "error: Not a number" >&2
	exit 1
fi

if [ -z "$CLIENT_ID" ]; then
	echo "error: CLIENT_ID undefined"
	exit 1
fi
if [ -z "$CLIENT_SECRET" ]; then
	echo "error: CLIENT_SECRET undefined"
	exit 1
fi

ACCESS_TOKEN=$(curl -s -X POST --data "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET" https://api.intra.42.fr/oauth/token | jq -r '.access_token')

DATA_1=$(curl -s -G -H "Authorization: Bearer $ACCESS_TOKEN" \
	--data-urlencode "page[size]=100" \
	--data-urlencode "filter[campus_id]=62" \
	--data-urlencode "filter[active]=true" \
	--data-urlencode "range[created_at]=2024-09-05T06:00:00.000Z, 2024-09-10T11:00:00.000Z" \
	"https://api.intra.42.fr/v2/cursus_users")

DATA_2=$(curl -s -G -H "Authorization: Bearer $ACCESS_TOKEN" \
        --data-urlencode "page[size]=100" \
        --data-urlencode "filter[campus_id]=62" \
		--data-urlencode "filter[active]=true" \
        --data-urlencode "page[number]=2" \
        --data-urlencode "range[created_at]=2024-09-05T06:00:00.000Z, 2024-09-10T11:00:00.000Z" \
        "https://api.intra.42.fr/v2/cursus_users")

DATA=$(echo "$DATA_1 $DATA_2" | jq -s '.[0] + .[1]' | jq 'sort_by(.user.correction_point) | reverse')
PROCESS=$(echo "$DATA" | jq -r '.[] | "&\(.user.login)&\(.user.correction_point)"' | cat -n)
LEADERBOARD=""
FOUND=false

echo ====== ðŸ¦– DINO LEADERBOARD ðŸ¦• ======
if [ -z "$1" ] || [[ "$1" =~ ^top ]] && [ $TOP != "1" ]; then
	echo
fi
while IFS='&' read -r index login points; do
	index=$(echo "$index" | awk '{$1=$1;print}')
	if [ -z "$1" ] || [ "$login" = "$1" ] || [ "$1" = $index ] || [[ "$1" =~ ^top ]]; then
		if [ "$login" = "$1" ] || [ "$index" = "$1" ]; then
			FOUND=true
		fi

		old_index="$index"
		if [ "$index" = "1" ]; then
			index="ðŸ‘‘"
		elif [ "$index" = "2" ]; then
			index="ðŸ¥ˆ"
		elif [ "$index" = "3" ]; then
			index="ðŸ¥‰"
		fi

		url_login=$(printf "\e]8;;https://profile.intra.42.fr/users/$login\e\\%-8s\e]8;;\e\\" "$login")
		printf "\t%-4s\t%s\t%d\n"	"$index" \
						"$url_login" \
						"$points"
		if [ "$index" = "ðŸ¥‰" ] && [[ "$1" =~ ^top || -z $1 ]]; then
			echo
		fi

		if [ $TOP = $old_index ]; then
			exit
		fi

		sleep 0.01
	fi
done <<< "$PROCESS"

if [ -n "$1" ] && [ $FOUND = false ]; then
	echo "This user does not exist." >&2
	exit 1
fi
